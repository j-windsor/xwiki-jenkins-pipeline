Defines various supported configurations supported by XWiki Standard, according to:

* DBs: https://dev.xwiki.org/xwiki/bin/view/Community/DatabaseSupportStrategy
* Servlet containers: https://dev.xwiki.org/xwiki/bin/view/Community/ServletContainerSupportStrategy/
* Browsers: https://dev.xwiki.org/xwiki/bin/view/Community/BrowserSupportStrategy

Note that for browsers we're constrained to use the version of them supported by the Selenium version we use. Our
strategy is to always use the latest released Selenium version in order to use the latest browser versions.

TODO: In the future replace this by Java code located in xwiki-platform-test-docker when JUnit5 supports this.
(see https://github.com/junit-team/junit5/issues/871).

It'll bring the following advantages:
* Less reliance on the CI. If we need to get away from Jenkins for ex, it'll make it easier. In general we need to
  have the maximum done in the Maven build and the minimum in CI scripts.
* Ability to run several configs at once on developer's machines.
* Ability to have a single Maven build executed in the CI and thus not get tons of mails whenever a test fails
  (which is the current situation).
* Ability to have different configurations depending on the branch in the source (for example in XWiki 10.11.x we
  don't support running on Java 11.x

Disadvantages:

* Ability to paralellize, i.e. execute each Maven build on a different CI agent. This is because the withMaven()
  step doesn't currently support this feature (which is a pity). See also
  https://massol.myxwiki.org/xwiki/bin/view/Blog/Jenkins%20and%20large%20Maven%20projects<li>

Parameters:

* `configurationName`: the type of configuration to return configurations. Allowed values are: `docker-latest`
  (the latest versions of supported XWiki configurations), `docker-all` (smoke tests, i.e. only a few tests, on the
  maximum number of configurations to flush out problems of configurations when XWiki doesn't start or has basic
  problems. This includes all supported configurations), and `docker-unsupported` (smoke tests, on configurations that
  we'll want to support in the future but that are currently not supported or not working).
* `xwikiVersion`: the XWiki version being built. This is used to decide what configurations are executed for this
  version (e.g. XWiki < 11.3 don't support Java 11)
